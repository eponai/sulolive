defaults: &defaults
  working_directory: ~/sulo
  docker:
    - image: circleci/clojure:lein-2.7.1
  environment:
    JVM_OPTS: -Xmx3200m
    LEIN_FAST_TRAMPOLINE: yes
    CLJS_BUILD_ID: release
    AWS_DEFAULT_REGION: us-east-1

version: 2
jobs:
  clojure_deps:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: clojure-deps-{{ checksum "project.clj" }}
      - run: |
          lein deps
          lein with-profile web deps
          lein with-profile tester deps
      - save_cache:
          key: clojure-deps-{{ checksum "project.clj" }}
          paths:
            - ~/.m2
            - ~/.lein

  npm_deps:
    working_directory: ~/sulo
    docker:
      - image: circleci/node:4.8.2
    steps:
      - checkout
      - restore_cache:
          key: npm-global-cache
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: install-foundation
          command: 'sudo npm install -g foundation-cli'
      - run:
          name: install-bower
          command: 'sudo npm install -g bower'
      - save_cache:
          key: npm-global-cache
          paths:
            - /usr/local/lib/node_modules

      - restore_cache:
          key: npm-deps-{{ checksum "package.json" }}
      - run:
          name: install-npm
          command: npm install
      - save_cache:
          key: npm-deps-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      - restore_cache:
          key: css-deps-{{ checksum "sulo-style/package.json" }}-{{ checksum "sulo-style/bower.json" }}
      - run:
          name: install-foundation-deps
          command: |
            cd sulo-style
            npm install
            bower install
      - save_cache:
          key: css-deps-{{ checksum "sulo-style/package.json" }}-{{ checksum "sulo-style/bower.json" }}
          paths:
            - ./sulo-style/node_modules



  test_clj:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: clojure-deps-{{ checksum "project.clj" }}
      - run: lein test

  test_cljs:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: clojure-deps-{{ checksum "project.clj" }}
      - restore_cache:
          key: npm-deps-{{ checksum "package.json" }}
      - run: ./scripts/run-cljs-tests.sh

  build_css:
    working_directory: ~/sulo
    docker:
      - image: circleci/node:4.8.2
    steps:
      - checkout
      - restore_cache:
          key: css-deps-{{ checksum "sulo-style/package.json" }}-{{ checksum "sulo-style/bower.json" }}
      - attach_workspace:
          at: ~/sulo
      - run: |
          cd sulo-style
          foundation build
      - persist_to_workspace:
          root: .
          paths: ./resources/public/assets/css


  build_clj:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: clojure-deps-{{ checksum "project.clj" }}
      - attach_workspace:
          at: ~/sulo
      - run: lein uberjar
      - run: mv target/uberjar/budget-*-standalone.jar target/uberjar/budget-uberjar.jar
      - persist_to_workspace:
          root: .
          paths: target/uberjar/budget-uberjar.jar

  build_cljs:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: clojure-deps-{{ checksum "project.clj" }}
      - attach_workspace:
          at: ~/sulo
      - run: lein prod-build-web
      - save_cache:
          key: clojure-deps-{{ checksum "project.clj" }}
          paths:
            - ~/.m2
      - persist_to_workspace:
          root: .
          paths: resources/public/release/js/out/budget.js

  create_final_jar:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/sulo
      - run: jar uf target/uberjar/budget-uberjar.jar resources/public/release/js/out/budget.js resources/public/assets/css
      - persist_to_workspace:
          root: .
          paths: target/uberjar/budget-uberjar.jar
      - store_artifacts:
          path: target/uberjar/budget-uberjar.jar
          destination: uberjar

  docker_build:
    working_directory: ~/sulo
    docker:
      - image: docker:17.05.0-ce-git
    environment:
      TIMBRE_LEVEL: :info
      PORT: 8080
    steps:
      - checkout
      - attach_workspace:
          at: ~/sulo
      - setup_remote_docker
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - docker-{{ .circle-sha }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .circle-sha }}
          paths:
            - /caches/app.tar
      - persist_to_workspace:
          root: .
          paths: /caches/app.tar

  docker_test:
    working_directory: ~/sulo
    docker:
      - image: docker:17.05.0-ce-git
    environment:
      TIMBRE_LEVEL: :info
      PORT: 8080
    steps:
      - checkout
      - attach_workspace:
          at: ~/sulo
      - setup_remote_docker
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run: |
          docker run -d -e "PORT=$PORT" -e "CLJS_BUILD_ID=$CLJS_BUILD_ID" -e "STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY" -e "FIREBASE_SERVICE_ACCOUNT=$FIREBASE_SERVICE_ACCOUNT" -e "FIREBASE_DATABASE_URL=$FIREBASE_DATABASE_URL" -p $PORT:$PORT app; sleep 15
          docker ps -l
          docker ps -l -q | xargs docker logs
          ./scripts/run-docker-img-test.sh localhost $PORT
          docker ps -l -q | xargs docker logs

  docker_push:
    working_directory: ~/sulo
    docker:
      - image: docker:17.05.0-ce-git
    environment:
      DOCKER_IMAGE: sulolive/sulo:$CIRCLE_SHA1
    steps:
      - attach_workspace:
          at: ~/sulo
      - setup_remote_docker
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run: |
          docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
          docker push $DOCKER_IMAGE



workflows:
  version: 2
  doit:
    jobs:
      - clojure_deps
      - npm_deps
      - test_clj:
          requires:
            - clojure_deps
      - test_cljs:
          requires:
            - npm_deps
            - clojure_deps
      - build_clj:
          requires:
            - clojure_deps
      - build_cljs:
          requires:
            - clojure_deps
      - build_css:
          requires:
            - npm_deps
      - create_final_jar:
          requires:
            - build_clj
            - build_cljs
            - build_css
      - docker_build:
          requires:
            - create_final_jar
      - docker_test:
          requires:
            - docker_build
      - docker_push:
          requires:
            - docker_test
          filters:
            branches:
              only: master
